package com.github.ctzntweets.twitter;

import twitter4j.Twitter;
import twitter4j.TwitterAdapter;
import twitter4j.TwitterFactory;
import twitter4j.TwitterListener;
import twitter4j.conf.ConfigurationBuilder;

public class TweetLoader {
	public void getTweets() {
		ConfigurationBuilder cb = new ConfigurationBuilder();
		cb.setUser("");
		cb.setPassword("");
		TwitterListener listener = new TwitterAdapter() {
	        @Override public void updatedStatus(Status status) {
	          System.out.println("Successfully updated the status to [" +
	                   status.getText() + "].");
	        }

	        @Override public void onException(TwitterException e, int method) {
	          if (method == TwitterMethods.UPDATE_STATUS) {
	            e.printStackTrace();
	          } else {
	            throw new AssertionError("Should not happen");
	          }
	        }
	    }
	    // The factory instance is re-useable and thread safe.
	    AsyncTwitterFactory factory = new AsyncTwitterFactory(listenrer);
	    AsyncTwitter asyncTwitter = factory.getInstance();
	    asyncTwitter.updateStatus(args[0]);
	}
}
